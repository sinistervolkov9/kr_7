version: '3'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["sh", "-c", "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"]
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - celery_worker
      - celery_beat
    environment:
      NAME: ${NAME}
      USER: ${USER}
      PASSWORD: ${PASSWORD}
      DB_HOST: db

  db:
    image: postgres
    environment:
      POSTGRES_DB: ${NAME}
      POSTGRES_USER: ${USER}
      POSTGRES_PASSWORD: ${PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${USER} -d ${NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A config worker --loglevel=info --pool=solo
    volumes:
      - .:/app
    depends_on:
      - redis
      - db

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A config beat -l info
    volumes:
      - .:/app
    depends_on:
      - redis
      - db

  telegram_bot:
    build:
      context: .
      dockerfile: Dockerfile
    command: python manage.py start_bot
    volumes:
      - .:/app
    depends_on:
      - redis
      - db

volumes:
  postgres_data:
